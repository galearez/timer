{"version":3,"sources":["assets/delete.svg","assets/play.svg","assets/pause.svg","assets/previous.svg","assets/next.svg","assets/replay.svg","assets/restore.svg","components/icons.tsx","components/countdown.tsx","timer.tsx","index.tsx"],"names":["_path","_path2","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDelete","_ref","svgRef","title","titleId","props","xmlns","height","viewBox","width","fill","ref","id","d","ForwardRef","SvgPlay","SvgPause","SvgPrevious","SvgNext","SvgReplay","SvgRestore","Icons","Icon","value","className","clsx","disbale","React","Component","Countdown","interval","state","countdownTime","time","minutes","Math","floor","seconds","isPaused","stopCountdown","bind","resumeCountdown","restartRound","nextRound","previousRound","setInterval","clearInterval","setState","mountNextRound","unmountCountdown","label","disbaleMoveButtons","disabled","buttonsToMove","onClick","FIVE_BY_FIVE","ONE_BY_ONE","Timer","screenWidth","window","innerWidth","labelRef","roundMinRef","roundSecRef","restMinRef","restSecRef","roundDefaultNumber","buttonToMoveRound","closeHomeScreen","routine","currentRound","mountCountdown","globalRests","activityForm","singleRest","roundMin","roundSec","minGlobalRest","secGlobalRest","minSingleRest","secSingleRest","handleUserInput","handleHomeClose","startCountdown","handleToggleFieldset","handleScreenResize","handleMinGlobalRestChange","handleSecGlobalRestChange","handleRoundMinChange","handleRoundSecChange","handleMinSingleRestChange","handleSecSingleRestChange","handleDeleteRound","handleRestartRoutine","createRef","addEventListener","removeEventListener","event","preventDefault","inputLabel","current","undefined","inputMin","inputSec","inputRestMin","inputRestSec","timeActivityMin","parseInt","timeActivitySec","timeRestMin","timeRestSec","timeActivity","timeRest","prevState","uuidv4","field","e","updatedRoutine","filter","elem","sixtyOptions","map","twelveOptions","handleShowButtons","countdownComponent","activitiesList","type","onChange","defaultChecked","onSubmit","placeholder","checked","nextActivity","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66ac07a6.chunk.js","sourcesContent":["var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#000000\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.a53e2203.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPlay(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#000000\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 6.82v10.36c0 .79.87 1.27 1.54.84l8.14-5.18c.62-.39.62-1.29 0-1.69L9.54 5.98C8.87 5.55 8 6.03 8 6.82z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlay);\nexport default __webpack_public_path__ + \"static/media/play.54725833.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPause(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#000000\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 19c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2s-2 .9-2 2v10c0 1.1.9 2 2 2zm6-12v10c0 1.1.9 2 2 2s2-.9 2-2V7c0-1.1-.9-2-2-2s-2 .9-2 2z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPause);\nexport default __webpack_public_path__ + \"static/media/pause.b87cfe89.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPrevious(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#000000\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 6c.55 0 1 .45 1 1v10c0 .55-.45 1-1 1s-1-.45-1-1V7c0-.55.45-1 1-1zm3.66 6.82l5.77 4.07c.66.47 1.58-.01 1.58-.82V7.93c0-.81-.91-1.28-1.58-.82l-5.77 4.07c-.57.4-.57 1.24 0 1.64z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPrevious);\nexport default __webpack_public_path__ + \"static/media/previous.3270e9ca.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgNext(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#000000\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.58 16.89l5.77-4.07c.56-.4.56-1.24 0-1.63L7.58 7.11C6.91 6.65 6 7.12 6 7.93v8.14c0 .81.91 1.28 1.58.82zM16 7v10c0 .55.45 1 1 1s1-.45 1-1V7c0-.55-.45-1-1-1s-1 .45-1 1z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgNext);\nexport default __webpack_public_path__ + \"static/media/next.8fd3bc25.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgReplay(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#000000\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 5V2.21c0-.45-.54-.67-.85-.35l-3.8 3.79c-.2.2-.2.51 0 .71l3.79 3.79c.32.31.86.09.86-.36V7c3.73 0 6.68 3.42 5.86 7.29-.47 2.27-2.31 4.1-4.57 4.57-3.57.75-6.75-1.7-7.23-5.01-.07-.48-.49-.85-.98-.85-.6 0-1.08.53-1 1.13.62 4.39 4.8 7.64 9.53 6.72 3.12-.61 5.63-3.12 6.24-6.24C20.84 9.48 16.94 5 12 5z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgReplay);\nexport default __webpack_public_path__ + \"static/media/replay.2092334d.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRestore(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#000000\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0V0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.25 3c-5.09-.14-9.26 3.94-9.26 9H2.2c-.45 0-.67.54-.35.85l2.79 2.8c.2.2.51.2.71 0l2.79-2.8c.32-.31.09-.85-.35-.85h-1.8c0-3.9 3.18-7.05 7.1-7 3.72.05 6.85 3.18 6.9 6.9.05 3.91-3.1 7.1-7 7.1-1.61 0-3.1-.55-4.28-1.48-.4-.31-.96-.28-1.32.08-.42.43-.39 1.13.08 1.5 1.52 1.19 3.44 1.9 5.52 1.9 5.05 0 9.14-4.17 9-9.26-.13-4.69-4.05-8.61-8.74-8.74zm-.51 5c-.41 0-.75.34-.75.75v3.68c0 .35.19.68.49.86l3.12 1.85c.36.21.82.09 1.03-.26.21-.36.09-.82-.26-1.03l-2.88-1.71v-3.4c0-.4-.33-.74-.75-.74z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRestore);\nexport default __webpack_public_path__ + \"static/media/restore.4c217b46.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport clsx from 'clsx';\n\nimport { ReactComponent as DeleteIcon } from '../assets/delete.svg';\nimport { ReactComponent as PlayIcon } from '../assets/play.svg';\nimport { ReactComponent as PauseIcon } from '../assets/pause.svg';\nimport { ReactComponent as PreviousIcon } from '../assets/previous.svg';\nimport { ReactComponent as NextIcon } from '../assets/next.svg';\nimport { ReactComponent as ReplayIcon } from '../assets/replay.svg';\nimport { ReactComponent as RestoreIcon } from '../assets/restore.svg';\n\ninterface IIconsProps {\n  value: string;\n  disbale?: boolean;\n}\n\nexport default class Icons extends React.Component<IIconsProps, {}> {\n  render() {\n    const Icon = () => {\n      switch (this.props.value) {\n        case 'delete':\n          return (\n            <DeleteIcon className='fill-current text-gray-50 inline-block' />\n          );\n        case 'play':\n          return (\n            <PlayIcon className='fill-current text-gray-50 inline-block' />\n          );\n        case 'pause':\n          return (\n            <PauseIcon className='fill-current text-gray-50 inline-block' />\n          );\n        case 'previous':\n          return (\n            <PreviousIcon\n              className={clsx(\n                'fill-current text-gray-50 inline-block',\n                this.props.disbale ? 'opacity-60' : 'opacity-100'\n              )}\n            />\n          );\n        case 'next':\n          return (\n            <NextIcon\n              className={clsx(\n                'fill-current text-gray-50 inline-block',\n                this.props.disbale ? 'opacity-60' : 'opacity-100'\n              )}\n            />\n          );\n        case 'replay':\n          return (\n            <ReplayIcon className='fill-current text-gray-50 inline-block' />\n          );\n        case 'restore':\n          return (\n            <RestoreIcon className='fill-current text-gray-50 inline-block mx-1' />\n          );\n        default:\n          return <span></span>;\n      }\n    };\n\n    return <Icon />;\n  }\n}\n","import React from 'react';\nimport Icons from './icons';\n\ninterface ICountdownProps {\n  //set label\n  label: string;\n  //set time\n  time: number;\n  //this method indicates that the next 'set' should run and unmount this component\n  nextRound: (value: number) => void;\n  //once this component is unmounted this method will mount the next one (if there is one) right after this unmounts\n  mountNextRound: () => void;\n  //this property is a callback to unmount the current countdown, it's purpose is to restart the current round\n  unmountCountdown: () => void;\n  //to show the move buttons depending on the current round and the size of the routine array\n  buttonsToMove: number;\n  //if the routine is to short, maybe one round, we don't need buttons to move over the rounds\n  disbaleMoveButtons?: boolean;\n}\n\ninterface ICountdownState {\n  //will hold the remaining time\n  countdownTime: number;\n  //interger representing the minutes left\n  minutes: number;\n  //interger representing the seconds left\n  seconds: number;\n  //to change the button while paused and putting it back to normal when resumed\n  isPaused: boolean;\n}\n\nexport default class Countdown extends React.Component<\n  ICountdownProps,\n  ICountdownState\n> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      countdownTime: this.props.time,\n      minutes: Math.floor(this.props.time / 60),\n      seconds: this.props.time % 60,\n      isPaused: false,\n    };\n\n    this.stopCountdown = this.stopCountdown.bind(this);\n    this.resumeCountdown = this.resumeCountdown.bind(this);\n    this.restartRound = this.restartRound.bind(this);\n    this.nextRound = this.nextRound.bind(this);\n    this.previousRound = this.previousRound.bind(this);\n  }\n\n  //this class variable will hold the setInterval, their only purpose is to be able to clear the interval\n  interval: any = null;\n\n  //once the component mounts it will start a countdown, the original value is the one passed as a prop to\n  //the component and it will run until the 'countdownTime' is 0\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      if (this.state.countdownTime < 0) {\n        clearInterval(this.interval);\n        this.props.nextRound(1);\n      } else {\n        this.setState({\n          countdownTime: this.state.countdownTime - 1,\n          minutes: Math.floor(this.state.countdownTime / 60),\n          seconds: this.state.countdownTime % 60,\n        });\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n    this.setState({\n      countdownTime: 0,\n    });\n    this.props.mountNextRound();\n  }\n\n  //this function will remove the setInterval to stop the countdown\n  stopCountdown() {\n    clearInterval(this.interval);\n    this.setState({\n      isPaused: true,\n    });\n  }\n\n  //this function will restart the countdown\n  resumeCountdown() {\n    this.setState({\n      isPaused: false,\n    });\n\n    this.interval = setInterval(() => {\n      if (this.state.countdownTime < 0) {\n        clearInterval(this.interval);\n        this.props.nextRound(1);\n      } else {\n        this.setState({\n          countdownTime: this.state.countdownTime - 1,\n          minutes: Math.floor(this.state.countdownTime / 60),\n          seconds: this.state.countdownTime % 60,\n        });\n      }\n    }, 1000);\n  }\n\n  //this function will restart the current round\n  restartRound() {\n    this.props.unmountCountdown();\n  }\n\n  //this function will unmount the current round and will mount the next round if there is one\n  nextRound() {\n    this.props.nextRound(1);\n  }\n  //this function will unmount the current round and will mount the previous round if there is one\n  previousRound() {\n    this.props.nextRound(-1);\n  }\n\n  render() {\n    return (\n      <div className='font-bold h-80 flex flex-col justify-center items-center'>\n        <div className='text-2xl md:text-4xl'>{this.props.label}</div>\n        <div className='text-6xl md:text-8xl mb-10'>\n          <span>\n            {this.state.minutes < 10 ? (\n              <span>0{this.state.minutes}</span>\n            ) : (\n              <span>{this.state.minutes}</span>\n            )}\n            :\n            {this.state.seconds < 10 ? (\n              <span>0{this.state.seconds}</span>\n            ) : (\n              <span>{this.state.seconds}</span>\n            )}\n          </span>\n        </div>\n        <div className='w-full max-w-md flex justify-around items-center'>\n          {!this.props.disbaleMoveButtons && (\n            <button\n              className='rounded-full w-12 h-12 bg-gray-700 disabled:bg-gray-900'\n              disabled={this.props.buttonsToMove === -1}\n              onClick={this.previousRound}\n            >\n              <Icons\n                value={'previous'}\n                disbale={this.props.buttonsToMove === -1}\n              />\n            </button>\n          )}\n\n          <button\n            className='rounded-full w-14 h-14 bg-gray-700'\n            onClick={this.restartRound}\n          >\n            <Icons value={'replay'} />\n          </button>\n          {this.state.isPaused ? (\n            <button\n              className='rounded-full w-16 h-16 bg-mint'\n              onClick={this.resumeCountdown}\n            >\n              <Icons value={'play'} />\n            </button>\n          ) : (\n            <button\n              className='rounded-full w-16 h-16 bg-gray-700'\n              onClick={this.stopCountdown}\n            >\n              <Icons value={'pause'} />\n            </button>\n          )}\n          {!this.props.disbaleMoveButtons && (\n            <button\n              className='rounded-full w-12 h-12 bg-gray-700 disabled:bg-gray-900'\n              disabled={this.props.buttonsToMove === 1}\n              onClick={this.nextRound}\n            >\n              <Icons value={'next'} disbale={this.props.buttonsToMove === 1} />\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Countdown from './components/countdown';\nimport { v4 as uuidv4 } from 'uuid';\nimport clsx from 'clsx';\n\nimport Icons from './components/icons';\n\n//So whats next?\n//  Add sounds\n//  Delete the input outlines\n//  Create a visual indicator of the current round in the activityList\n//  Refactor and Optimize\n//  And it will be done forever.\n\n//this interface define the timer component states types\ninterface ITimerStates {\n  routine: any[];\n  currentRound: number;\n  mountCountdown: boolean;\n  globalRests: boolean;\n  activityForm: boolean;\n  singleRest: boolean;\n  screenWidth: number;\n  roundMin: number;\n  roundSec: number;\n  minGlobalRest: number;\n  secGlobalRest: number;\n  minSingleRest: number;\n  secSingleRest: number;\n  closeHomeScreen: boolean;\n}\n\n//before this change this two arrays where auto-generated on component mounting, but there was a big problem\n//it needs to 'update' before generating the options for the select box so when using it on desktop there\n//are not options at the start, thats why even if it's annoying I created this two arrays so there\n//are options on first rendering\nconst FIVE_BY_FIVE = [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60];\nconst ONE_BY_ONE = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\n  22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n  41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\n  60,\n];\n\n//this component will handle the user input and will pass main data, rounds (id, label and time)\n//to the other components\nexport default class Timer extends React.Component<{}, ITimerStates> {\n  //get intial first screen width\n  screenWidth: number = window.innerWidth;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      //this state will control when the user input forms are active, basically when the countdown start\n      //the 'home' screen will be closed to give room for the countdown UI elements\n      closeHomeScreen: false,\n      //array of objects: {id, label, time}\n      routine: [],\n      //A round is an element of the routine array, this specify the round which will be sent to the countdown\n      currentRound: 0,\n      //if true will mount the 'Countdown' component\n      mountCountdown: false,\n\n      //will control the form to auto generate rests between rounds\n      globalRests: false,\n      //will control the form to include a new round, the initial value will depend on the initial screen size,\n      //the responsive design render the form by default when the app is on a screen over 767 (md in tailwind)\n      activityForm: this.screenWidth > 767,\n      //will control the form to include a single rest after a round\n      singleRest: false,\n\n      //initial screenWidth, will update on screen resize\n      screenWidth: this.screenWidth,\n\n      //this states are ment to control the round time selects, this was add to restart the values after\n      //a round is submitted\n      roundMin: 0,\n      roundSec: 0,\n\n      //since there are two ways to define a rest, we are goind to define state for their values, this state control\n      //the rest if the globalRest state is true\n      minGlobalRest: 0,\n      secGlobalRest: 0,\n\n      //this state are meant to control individual rests, since sometimes there will be different rests lengths\n      minSingleRest: 0,\n      secSingleRest: 0,\n    };\n\n    this.handleUserInput = this.handleUserInput.bind(this);\n    this.handleHomeClose = this.handleHomeClose.bind(this);\n    this.startCountdown = this.startCountdown.bind(this);\n    this.unmountCountdown = this.unmountCountdown.bind(this);\n    this.nextRound = this.nextRound.bind(this);\n    this.handleToggleFieldset = this.handleToggleFieldset.bind(this);\n    this.handleScreenResize = this.handleScreenResize.bind(this);\n\n    this.handleMinGlobalRestChange = this.handleMinGlobalRestChange.bind(this);\n    this.handleSecGlobalRestChange = this.handleSecGlobalRestChange.bind(this);\n\n    this.handleRoundMinChange = this.handleRoundMinChange.bind(this);\n    this.handleRoundSecChange = this.handleRoundSecChange.bind(this);\n\n    this.handleMinSingleRestChange = this.handleMinSingleRestChange.bind(this);\n    this.handleSecSingleRestChange = this.handleSecSingleRestChange.bind(this);\n\n    this.handleDeleteRound = this.handleDeleteRound.bind(this);\n\n    this.handleRestartRoutine = this.handleRestartRoutine.bind(this);\n\n    this.labelRef = React.createRef();\n    this.roundMinRef = React.createRef();\n    this.roundSecRef = React.createRef();\n    this.restMinRef = React.createRef();\n    this.restSecRef = React.createRef();\n  }\n\n  //user input box references\n  labelRef: React.RefObject<HTMLInputElement>;\n  roundMinRef: React.RefObject<HTMLSelectElement>;\n  roundSecRef: React.RefObject<HTMLSelectElement>;\n  restMinRef: React.RefObject<HTMLSelectElement>;\n  restSecRef: React.RefObject<HTMLSelectElement>;\n\n  //variable to keep track of the number of rounds, just for rounds default names\n  roundDefaultNumber: number = 1;\n\n  //this variable will help to enable or disable the buttons to move to the next or the previous\n  //round in the routine -1 will disable the previous btn, 0 will enable both and 1 will disbale\n  //the next button\n\n  //I just realised I need a fourth option non of them enable, e.g. if there is only one round\n  //the user should not go forward nor back\n  buttonToMoveRound: number = -1;\n\n  //when screen resize it will be called to change the screenWidth state which control some responsive rendering\n  handleScreenResize() {\n    this.setState({ screenWidth: window.innerWidth }, () => {\n      //if the user expands the screen over 767 it will open the activity form component\n      if (this.state.screenWidth > 767 && !this.state.activityForm) {\n        this.setState({\n          activityForm: true,\n        });\n        return;\n      }\n\n      //if the user shrinks the screen below 768 it will close the activity form component\n      if (this.state.screenWidth < 768 && this.state.activityForm) {\n        this.setState({\n          activityForm: false,\n        });\n        return;\n      }\n    });\n  }\n\n  componentDidMount() {\n    //once it gets mounted waits for any resize\n    window.addEventListener('resize', this.handleScreenResize);\n  }\n\n  //unmount the window resize event listener\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleScreenResize);\n  }\n\n  //this function get the values from the user and assign them to the routine state\n  handleUserInput(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    //check if the user wrote a valid string as the round label, if not it will be assigned a default name\n    let inputLabel = this.labelRef.current?.value;\n    if (inputLabel === '' || inputLabel === undefined) {\n      inputLabel = 'Round ' + this.roundDefaultNumber; //default name if the user don't specify one\n    }\n\n    //This block of code it's very ugly find a way to make it look beautiful\n    let inputMin = this.roundMinRef.current?.value;\n    let inputSec = this.roundSecRef.current?.value;\n    let inputRestMin = this.restMinRef.current?.value;\n    let inputRestSec = this.restSecRef.current?.value;\n    if (\n      inputMin === undefined ||\n      inputSec === undefined ||\n      inputRestMin === undefined ||\n      inputRestSec === undefined\n    ) {\n      return;\n    }\n\n    //convert the string values to numbers\n    const timeActivityMin = parseInt(inputMin);\n    const timeActivitySec = parseInt(inputSec);\n    const timeRestMin = parseInt(inputRestMin);\n    const timeRestSec = parseInt(inputRestSec);\n\n    //convert the activity time to seconds\n    const timeActivity = timeActivityMin * 60 + timeActivitySec;\n    const timeRest = timeRestMin * 60 + timeRestSec;\n\n    //if there is no time for an activity it will not create a routine round\n    if (timeActivity === 0) {\n      return;\n    }\n\n    //only the values that met the conditions will be assigned to the user routine\n    //label must be a valid string\n    //time must be an integer between 0 and 60\n    this.setState((prevState) => ({\n      routine: [\n        ...prevState.routine,\n        { id: uuidv4(), label: inputLabel, time: timeActivity },\n      ],\n    }));\n\n    //once a round is created it adds one to the counter\n    this.roundDefaultNumber++;\n\n    //add a rest after the round if the user has one of the add Rest switch enabled, this is like this\n    //because that way the user can turn off the global rest if they don't need it between rounds\n    if (this.state.singleRest) {\n      this.setState((prevState) => ({\n        routine: [\n          ...prevState.routine,\n          { id: uuidv4(), label: 'Rest', time: timeRest },\n        ],\n      }));\n    }\n\n    //reset the values of the single rests, if there are global rests, they will be reset to that value, if not\n    //they will be reset to 0\n    this.setState({\n      minSingleRest: this.state.minGlobalRest,\n      secSingleRest: this.state.secGlobalRest,\n      roundMin: 0,\n      roundSec: 0,\n    });\n\n    //close the input form modal\n    if (this.state.screenWidth < 768) {\n      this.setState({\n        activityForm: false,\n      });\n    }\n  }\n\n  //this function will set which 'round' should run, also a change indicates that the current interval\n  //it's done executing so the next one should run, that why we also pass a callback, this callback\n  //unmount the component that just has finished\n  nextRound(value: number) {\n    this.setState(\n      {\n        currentRound: this.state.currentRound + value,\n      },\n      () => {\n        this.setState({\n          mountCountdown: false,\n        });\n      }\n    );\n  }\n\n  //this function will start a countdown, is used in two cases:\n  //first, the user click in start timer\n  //second, one countdown reach zero, unmounts and if there is another round it will mount the component again for the new round\n  startCountdown() {\n    //this condition checks if there are elements in the routine array to\n    //run a countdown, if so the component 'Countdown' will be mounted\n    if (this.state.currentRound < this.state.routine.length) {\n      this.setState({\n        mountCountdown: true,\n      });\n    }\n\n    return;\n  }\n\n  //This function will unmount the Countdown component, and since that action will trigger the Countdown\n  //componentWillUnmount() method, it will restart the current round\n  unmountCountdown() {\n    this.setState({\n      mountCountdown: false,\n    });\n  }\n\n  //when the user start the countdown the first time it will unmount all the 'home screen' elements\n  handleHomeClose() {\n    this.setState({\n      closeHomeScreen: true,\n    });\n  }\n\n  //this function will handle all the fields where the input can add data, they will only be rendered\n  //once the user need them in mobile, in screens > 768, they will be rendered by default and the only\n  //conditional rendering will be the other components\n  handleToggleFieldset(field: string) {\n    switch (field) {\n      case 'globalRests':\n        this.setState({\n          globalRests: !this.state.globalRests,\n          singleRest: !this.state.globalRests,\n        });\n        break;\n      case 'activityForm':\n        this.setState({\n          activityForm: !this.state.activityForm,\n        });\n        break;\n      case 'singleRest':\n        this.setState({\n          singleRest: !this.state.singleRest,\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  //handle global rest select value, and also single rests to show that they will be added\n  handleMinGlobalRestChange(e: any) {\n    this.setState({\n      minGlobalRest: e.target.value,\n      minSingleRest: e.target.value,\n    });\n  }\n\n  //handle global rest select value, and also single rests to show that they will be added\n  handleSecGlobalRestChange(e: any) {\n    this.setState({\n      secGlobalRest: e.target.value,\n      secSingleRest: e.target.value,\n    });\n  }\n\n  //handle round minutes\n  handleRoundMinChange(e: any) {\n    this.setState({\n      roundMin: e.target.value,\n    });\n  }\n\n  //handle round seconds\n  handleRoundSecChange(e: any) {\n    this.setState({\n      roundSec: e.target.value,\n    });\n  }\n\n  //handle single rest select value\n  handleMinSingleRestChange(e: any) {\n    this.setState({\n      minSingleRest: e.target.value,\n    });\n  }\n\n  //handle single rest select value\n  handleSecSingleRestChange(e: any) {\n    this.setState({\n      secSingleRest: e.target.value,\n    });\n  }\n\n  //this method will delete a round\n  handleDeleteRound(id: number) {\n    let updatedRoutine = this.state.routine.filter((elem) => elem.id !== id);\n\n    this.setState({\n      routine: updatedRoutine,\n    });\n  }\n\n  //this method will control define the state of the buttons to move through the rounds\n  handleShowButtons() {\n    let difference = this.state.currentRound - this.state.routine.length;\n\n    if (difference === -1) {\n      this.buttonToMoveRound = 1;\n    } else if (this.state.currentRound === 0) {\n      this.buttonToMoveRound = -1;\n    } else {\n      this.buttonToMoveRound = 0;\n    }\n  }\n\n  //this function will restart the whole routine\n  handleRestartRoutine() {\n    this.setState(\n      {\n        currentRound: 0,\n        mountCountdown: false,\n      },\n      () => {\n        this.startCountdown();\n      }\n    );\n  }\n\n  render() {\n    //creates options for the minutes select box\n    const sixtyOptions = ONE_BY_ONE.map((elem: number) => (\n      <option value={elem} key={elem}>\n        {elem}\n      </option>\n    ));\n\n    //create options for the seconds select box\n    const twelveOptions = FIVE_BY_FIVE.map((elem: number) => (\n      <option value={elem} key={elem}>\n        {elem}\n      </option>\n    ));\n\n    this.handleShowButtons();\n\n    //holds the countdown component and it's assigned on each 'currentRound' change\n    const countdownComponent = (\n      <Countdown\n        label={this.state.routine[this.state.currentRound]?.label}\n        time={this.state.routine[this.state.currentRound]?.time}\n        nextRound={this.nextRound}\n        mountNextRound={this.startCountdown}\n        unmountCountdown={this.unmountCountdown}\n        buttonsToMove={this.buttonToMoveRound}\n        disbaleMoveButtons={this.state.routine.length === 1}\n      />\n    );\n\n    //this variable is meant to show the next round on the routine\n    const nextActivity = () => {\n      if (this.state.currentRound >= this.state.routine.length - 1) {\n        return <div className='h-20 w-1 mb-4'></div>;\n      }\n      const elem = this.state.routine[this.state.currentRound + 1];\n      const minutes = Math.floor(elem.time / 60);\n      const seconds = elem.time % 60;\n\n      return (\n        <div className='bg-gray-700 rounded-md mb-4'>\n          <h2 className='pt-2 px-2'>Next</h2>\n\n          <div className='w-full p-2 flex justify-between items-center flex-nowrap text-lg'>\n            <span>{elem.label}</span>\n            <div className='flex items-center'>\n              <span>\n                {minutes < 10 ? (\n                  <span>0{minutes}</span>\n                ) : (\n                  <span>{minutes}</span>\n                )}\n                :\n                {seconds < 10 ? (\n                  <span>0{seconds}</span>\n                ) : (\n                  <span>{seconds}</span>\n                )}\n              </span>\n            </div>\n          </div>\n        </div>\n      );\n    };\n\n    //this variable is meant to render the routine\n    const activitiesList = this.state.routine.map((elem: any) => {\n      const minutes = Math.floor(elem.time / 60);\n      const seconds = elem.time % 60;\n\n      return (\n        <div\n          key={elem.id}\n          className='w-full bg-gray-700 rounded-md p-2 mb-2 flex justify-between items-center flex-nowrap text-lg'\n        >\n          <span>{elem.label}</span>\n          <div className='flex items-center'>\n            <span>\n              {minutes < 10 ? <span>0{minutes}</span> : <span>{minutes}</span>}:\n              {seconds < 10 ? <span>0{seconds}</span> : <span>{seconds}</span>}\n            </span>\n            <span\n              className='inline-block ml-3'\n              onClick={() => {\n                this.handleDeleteRound(elem.id);\n              }}\n            >\n              <Icons value={'delete'} />\n            </span>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div className='w-full max-w-xl m-auto md:grid grid-cols-1'>\n        <div\n          className={clsx(\n            'flex flex-col justify-between',\n            this.state.closeHomeScreen ? 'h-screen' : 'h-auto'\n          )}\n        >\n          <header className='flex justify-between items-center'>\n            <h1>Timer</h1>\n            {!this.state.closeHomeScreen ? (\n              <button\n                className='font-bold text-white py-2 px-4 rounded-md bg-gradient-to-r from-mint to-lime'\n                onClick={() => {\n                  if (this.state.routine.length !== 0) {\n                    this.startCountdown();\n                    this.handleHomeClose();\n                  }\n\n                  return;\n                }}\n              >\n                Start routine\n              </button>\n            ) : (\n              <button\n                className='font-bold text-white py-2 px-4 rounded-md bg-gray-700'\n                onClick={this.handleRestartRoutine}\n              >\n                Restart all <Icons value={'restore'} />\n              </button>\n            )}\n          </header>\n          {!this.state.closeHomeScreen && (\n            <form className='w-full md:mt-2 flex flex-col'>\n              <fieldset className='text-lg mt-2 flex justify-between items-center'>\n                <h2>Repeat rest</h2>\n                <label className='toggle-switch'>\n                  <input\n                    type='checkbox'\n                    onChange={() => this.handleToggleFieldset('globalRests')}\n                    defaultChecked={this.state.globalRests}\n                  />\n                  <span className='slider'></span>\n                </label>\n              </fieldset>\n              {this.state.globalRests && (\n                <fieldset className='flex items-end'>\n                  <label className='flex flex-col flex-1 mr-1'>\n                    Minutes\n                    <select\n                      value={this.state.minGlobalRest}\n                      className='form-select flex-none'\n                      onChange={this.handleMinGlobalRestChange}\n                      disabled={!this.state.globalRests}\n                    >\n                      {sixtyOptions}\n                    </select>\n                  </label>\n                  <label className='flex flex-col flex-1'>\n                    Seconds\n                    <select\n                      value={this.state.secGlobalRest}\n                      className='form-select flex-none'\n                      onChange={this.handleSecGlobalRestChange}\n                      disabled={!this.state.globalRests}\n                    >\n                      {twelveOptions}\n                    </select>\n                  </label>\n                </fieldset>\n              )}\n            </form>\n          )}\n          {!this.state.closeHomeScreen && (\n            <div>\n              <hr className='w-9/12 m-auto mt-2 md:my-2' />\n              <button\n                className='font-bold block md:hidden w-3/5 text-white py-2 px-4 m-auto mt-2 rounded-md bg-gray-600'\n                onClick={() => {\n                  this.handleToggleFieldset('activityForm');\n                  if (this.state.globalRests) {\n                    this.setState({\n                      singleRest: true,\n                    });\n                  }\n                }}\n              >\n                New Round\n              </button>\n            </div>\n          )}\n          {!this.state.closeHomeScreen && this.state.activityForm && (\n            <div className='absolute md:relative top-0 left-0 w-full h-full'>\n              <div\n                className='absolute md:hidden top-0 left-0 w-full h-full bg-gray-50 bg-opacity-30'\n                onClick={() => this.handleToggleFieldset('activityForm')}\n              ></div>\n              <form\n                className='bg-gray-800 w-11/12 md:w-full p-2 md:p-0 rounded-md absolute md:relative top-1/2 left-1/2 md:top-auto md:left-auto transform -translate-y-1/2 -translate-x-1/2 md:transform-none'\n                onSubmit={this.handleUserInput}\n              >\n                <h2>Round</h2>\n                <fieldset>\n                  <label className='flex flex-col'>\n                    Name\n                    <input\n                      type='text'\n                      className='form-input mt-1'\n                      ref={this.labelRef}\n                      placeholder={'Round ' + this.roundDefaultNumber}\n                    />\n                  </label>\n                </fieldset>\n                <fieldset className='flex items-end mb-2'>\n                  <label className='flex flex-col flex-1 mr-1'>\n                    Minutes\n                    <select\n                      className='form-select flex-none'\n                      ref={this.roundMinRef}\n                      onChange={this.handleRoundMinChange}\n                      value={this.state.roundMin}\n                    >\n                      {sixtyOptions}\n                    </select>\n                  </label>\n                  <label className='flex flex-col flex-1'>\n                    Seconds\n                    <select\n                      className='form-select flex-none'\n                      ref={this.roundSecRef}\n                      onChange={this.handleRoundSecChange}\n                      value={this.state.roundSec}\n                    >\n                      {twelveOptions}\n                    </select>\n                  </label>\n                </fieldset>\n                <fieldset className='bg-gray-700 mb-2 px-1 rounded-md'>\n                  <span className='mt-1 flex justify-between items-center'>\n                    <h2>Rest</h2>\n                    <label className='toggle-switch '>\n                      <input\n                        type='checkbox'\n                        onClick={() => this.handleToggleFieldset('singleRest')}\n                        checked={this.state.singleRest}\n                      />\n                      <span className='slider'></span>\n                    </label>\n                  </span>\n                  <span className='flex items-end mb-2'>\n                    <label className='flex flex-col flex-1 mr-1'>\n                      Minutes\n                      <select\n                        className='form-select flex-none'\n                        ref={this.restMinRef}\n                        value={this.state.minSingleRest}\n                        onChange={this.handleMinSingleRestChange}\n                        disabled={!this.state.singleRest}\n                      >\n                        {sixtyOptions}\n                      </select>\n                    </label>\n                    <label className='flex flex-col flex-1'>\n                      Seconds\n                      <select\n                        className='form-select flex-none'\n                        ref={this.restSecRef}\n                        value={this.state.secSingleRest}\n                        onChange={this.handleSecSingleRestChange}\n                        disabled={!this.state.singleRest}\n                      >\n                        {twelveOptions}\n                      </select>\n                    </label>\n                  </span>\n                </fieldset>\n                <button\n                  type='submit'\n                  className='font-bold text-white block w-3/5 py-2 px-4 m-auto rounded-md bg-gradient-to-r from-mint to-lime'\n                >\n                  Add round\n                </button>\n              </form>\n            </div>\n          )}\n          {this.state.closeHomeScreen && (\n            <div>\n              {this.state.mountCountdown ? (\n                countdownComponent\n              ) : (\n                <div className='font-bold text-4xl md:text-6xl h-80 flex flex-col justify-center items-center'>\n                  Completed!\n                </div>\n              )}\n            </div>\n          )}\n          {this.state.closeHomeScreen && nextActivity()}\n        </div>\n        <div className='mt-2'>{activitiesList}</div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Timer from './timer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Timer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}